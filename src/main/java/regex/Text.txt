                 REGular Expression
    Регулярные выражения необходимы для создания шаблонов,
с помощью которых производят такие операции, как поиск,
сравнение, замена.(нап-р из текста найти слово или телефоны)
    Регулярные выражения - это совокупность символов,
некоторые из которых являются специальными-метасимволами,
т.е обладаю каким-то функционалом.

    java.util.regex
    Pattern myPattern = Pattern.compile("REGEX");
    Matcher myMatcher = myPattern.matcher(myString);

        Часто используемые символы в REGEX
    abc - Соответствует последовательно идущим abc
    [abc] - Соответствует или a, или b, или c
    [d-j] - Соответствует одной из букв из диапазона d-j
    [3-8] - Соответствует одной из цифр из диапазона 3-8
    [B-Fd-j3-8] - Соответствует одной из букв из обоих
            диапазонов или одной из цифр из диапазона 3-8
    a|b - Соответствует либо букве a, либо букве b

    [^d-j] - Данный символ, стоящий в начале этих скобок,
           означает отрицание. Соответствует одной из букв
           Не из диапазона d-j
    . - Соответствует одному любому символу. Исключение:
           символ новой строки
    ^ выражение - Соответствует выражению в начале строки
    выражение$ - Соответствует выражению в конце строки

    писать 2 слеша \\d экранирование
    \d - Соответствует одной цифре
    \D - Соответствует одной НЕ цифре, включая пробелы
    \w - Соответствует одной букве, цифре или "_" без пробела
    \W - Соответствует одному символу, который НЕ буква,
         НЕ цифра и НЕ "_"
    \s - Соответствует пробельному символу
    \S - Соответствует НЕ пробельному символу
    \A - Соответствует выражению в начале String-a
    \Z - Соответствует выражению в конце String-a
    \b - Соответствует границе слова или числа
    \B - Соответствует границе НЕ слова и НЕ числа

    выражение? - Соответствует0 или 1 повторению
    выражение* - Соответствует 0 или большему количеству
                 повторений
    выражение+ - Соответствует 1 или большему количеству
                 повторений
    выражение{n} - Соответствует количеству повторений "n"
    выражение{m, n} - Соответствует количеству повторений
                 от "m" до "n"
    выражение{n,} - Соответствует n или большему количеству
                 повторений



                 String
            Методы matches и split

    Сверяет String с регулярным выражением
       public boolean matches(String regex)

    Делит String на несколько частей по принципу
    который мы укажем в regex, получаем массив
       public String[] split(String regex)


          методы printf и format
    %[flags][width][.precision]datatype_specifier
            ширина   точность  спецификатор(тип)

Ширина - минимальное кол-во символов, котоая будет
          определена для нашего текста
Точность - можем округлять

         flags              |     DT specifiers
  "-" - выравнивание по     | "b" - boolean
        левому краю         | "c" - character
  "0" - добавление нулей    | "s" - String
        перед числом        | "d" - целое число
  "," - разделитель         | "f" - десятичное
        разрядов в числах   |       число
  (основные их больше)





